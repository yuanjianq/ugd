package com.gfan.report.frame.module;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UserExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table user
     *
     * @ibatorgenerated Wed Apr 29 16:15:38 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table user
     *
     * @ibatorgenerated Wed Apr 29 16:15:38 CST 2015
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user
     *
     * @ibatorgenerated Wed Apr 29 16:15:38 CST 2015
     */
    public UserExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user
     *
     * @ibatorgenerated Wed Apr 29 16:15:38 CST 2015
     */
    protected UserExample(UserExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user
     *
     * @ibatorgenerated Wed Apr 29 16:15:38 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user
     *
     * @ibatorgenerated Wed Apr 29 16:15:38 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user
     *
     * @ibatorgenerated Wed Apr 29 16:15:38 CST 2015
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user
     *
     * @ibatorgenerated Wed Apr 29 16:15:38 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user
     *
     * @ibatorgenerated Wed Apr 29 16:15:38 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user
     *
     * @ibatorgenerated Wed Apr 29 16:15:38 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table user
     *
     * @ibatorgenerated Wed Apr 29 16:15:38 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table user
     *
     * @ibatorgenerated Wed Apr 29 16:15:38 CST 2015
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andDisplayNameIsNull() {
            addCriterion("display_name is null");
            return this;
        }

        public Criteria andDisplayNameIsNotNull() {
            addCriterion("display_name is not null");
            return this;
        }

        public Criteria andDisplayNameEqualTo(String value) {
            addCriterion("display_name =", value, "displayName");
            return this;
        }

        public Criteria andDisplayNameNotEqualTo(String value) {
            addCriterion("display_name <>", value, "displayName");
            return this;
        }

        public Criteria andDisplayNameGreaterThan(String value) {
            addCriterion("display_name >", value, "displayName");
            return this;
        }

        public Criteria andDisplayNameGreaterThanOrEqualTo(String value) {
            addCriterion("display_name >=", value, "displayName");
            return this;
        }

        public Criteria andDisplayNameLessThan(String value) {
            addCriterion("display_name <", value, "displayName");
            return this;
        }

        public Criteria andDisplayNameLessThanOrEqualTo(String value) {
            addCriterion("display_name <=", value, "displayName");
            return this;
        }

        public Criteria andDisplayNameLike(String value) {
            addCriterion("display_name like", value, "displayName");
            return this;
        }

        public Criteria andDisplayNameNotLike(String value) {
            addCriterion("display_name not like", value, "displayName");
            return this;
        }

        public Criteria andDisplayNameIn(List values) {
            addCriterion("display_name in", values, "displayName");
            return this;
        }

        public Criteria andDisplayNameNotIn(List values) {
            addCriterion("display_name not in", values, "displayName");
            return this;
        }

        public Criteria andDisplayNameBetween(String value1, String value2) {
            addCriterion("display_name between", value1, value2, "displayName");
            return this;
        }

        public Criteria andDisplayNameNotBetween(String value1, String value2) {
            addCriterion("display_name not between", value1, value2, "displayName");
            return this;
        }

        public Criteria andUserNameIsNull() {
            addCriterion("user_name is null");
            return this;
        }

        public Criteria andUserNameIsNotNull() {
            addCriterion("user_name is not null");
            return this;
        }

        public Criteria andUserNameEqualTo(String value) {
            addCriterion("user_name =", value, "userName");
            return this;
        }

        public Criteria andUserNameNotEqualTo(String value) {
            addCriterion("user_name <>", value, "userName");
            return this;
        }

        public Criteria andUserNameGreaterThan(String value) {
            addCriterion("user_name >", value, "userName");
            return this;
        }

        public Criteria andUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("user_name >=", value, "userName");
            return this;
        }

        public Criteria andUserNameLessThan(String value) {
            addCriterion("user_name <", value, "userName");
            return this;
        }

        public Criteria andUserNameLessThanOrEqualTo(String value) {
            addCriterion("user_name <=", value, "userName");
            return this;
        }

        public Criteria andUserNameLike(String value) {
            addCriterion("user_name like", value, "userName");
            return this;
        }

        public Criteria andUserNameNotLike(String value) {
            addCriterion("user_name not like", value, "userName");
            return this;
        }

        public Criteria andUserNameIn(List values) {
            addCriterion("user_name in", values, "userName");
            return this;
        }

        public Criteria andUserNameNotIn(List values) {
            addCriterion("user_name not in", values, "userName");
            return this;
        }

        public Criteria andUserNameBetween(String value1, String value2) {
            addCriterion("user_name between", value1, value2, "userName");
            return this;
        }

        public Criteria andUserNameNotBetween(String value1, String value2) {
            addCriterion("user_name not between", value1, value2, "userName");
            return this;
        }

        public Criteria andEmailIsNull() {
            addCriterion("email is null");
            return this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("email is not null");
            return this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("email =", value, "email");
            return this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("email <>", value, "email");
            return this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("email >", value, "email");
            return this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("email >=", value, "email");
            return this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("email <", value, "email");
            return this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("email <=", value, "email");
            return this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("email like", value, "email");
            return this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("email not like", value, "email");
            return this;
        }

        public Criteria andEmailIn(List values) {
            addCriterion("email in", values, "email");
            return this;
        }

        public Criteria andEmailNotIn(List values) {
            addCriterion("email not in", values, "email");
            return this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("email between", value1, value2, "email");
            return this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("email not between", value1, value2, "email");
            return this;
        }

        public Criteria andEmailValidatedIsNull() {
            addCriterion("email_validated is null");
            return this;
        }

        public Criteria andEmailValidatedIsNotNull() {
            addCriterion("email_validated is not null");
            return this;
        }

        public Criteria andEmailValidatedEqualTo(Boolean value) {
            addCriterion("email_validated =", value, "emailValidated");
            return this;
        }

        public Criteria andEmailValidatedNotEqualTo(Boolean value) {
            addCriterion("email_validated <>", value, "emailValidated");
            return this;
        }

        public Criteria andEmailValidatedGreaterThan(Boolean value) {
            addCriterion("email_validated >", value, "emailValidated");
            return this;
        }

        public Criteria andEmailValidatedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("email_validated >=", value, "emailValidated");
            return this;
        }

        public Criteria andEmailValidatedLessThan(Boolean value) {
            addCriterion("email_validated <", value, "emailValidated");
            return this;
        }

        public Criteria andEmailValidatedLessThanOrEqualTo(Boolean value) {
            addCriterion("email_validated <=", value, "emailValidated");
            return this;
        }

        public Criteria andEmailValidatedIn(List values) {
            addCriterion("email_validated in", values, "emailValidated");
            return this;
        }

        public Criteria andEmailValidatedNotIn(List values) {
            addCriterion("email_validated not in", values, "emailValidated");
            return this;
        }

        public Criteria andEmailValidatedBetween(Boolean value1, Boolean value2) {
            addCriterion("email_validated between", value1, value2, "emailValidated");
            return this;
        }

        public Criteria andEmailValidatedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("email_validated not between", value1, value2, "emailValidated");
            return this;
        }

        public Criteria andUserNameTypeIsNull() {
            addCriterion("user_name_type is null");
            return this;
        }

        public Criteria andUserNameTypeIsNotNull() {
            addCriterion("user_name_type is not null");
            return this;
        }

        public Criteria andUserNameTypeEqualTo(Boolean value) {
            addCriterion("user_name_type =", value, "userNameType");
            return this;
        }

        public Criteria andUserNameTypeNotEqualTo(Boolean value) {
            addCriterion("user_name_type <>", value, "userNameType");
            return this;
        }

        public Criteria andUserNameTypeGreaterThan(Boolean value) {
            addCriterion("user_name_type >", value, "userNameType");
            return this;
        }

        public Criteria andUserNameTypeGreaterThanOrEqualTo(Boolean value) {
            addCriterion("user_name_type >=", value, "userNameType");
            return this;
        }

        public Criteria andUserNameTypeLessThan(Boolean value) {
            addCriterion("user_name_type <", value, "userNameType");
            return this;
        }

        public Criteria andUserNameTypeLessThanOrEqualTo(Boolean value) {
            addCriterion("user_name_type <=", value, "userNameType");
            return this;
        }

        public Criteria andUserNameTypeIn(List values) {
            addCriterion("user_name_type in", values, "userNameType");
            return this;
        }

        public Criteria andUserNameTypeNotIn(List values) {
            addCriterion("user_name_type not in", values, "userNameType");
            return this;
        }

        public Criteria andUserNameTypeBetween(Boolean value1, Boolean value2) {
            addCriterion("user_name_type between", value1, value2, "userNameType");
            return this;
        }

        public Criteria andUserNameTypeNotBetween(Boolean value1, Boolean value2) {
            addCriterion("user_name_type not between", value1, value2, "userNameType");
            return this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return this;
        }

        public Criteria andTypeEqualTo(Byte value) {
            addCriterion("type =", value, "type");
            return this;
        }

        public Criteria andTypeNotEqualTo(Byte value) {
            addCriterion("type <>", value, "type");
            return this;
        }

        public Criteria andTypeGreaterThan(Byte value) {
            addCriterion("type >", value, "type");
            return this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("type >=", value, "type");
            return this;
        }

        public Criteria andTypeLessThan(Byte value) {
            addCriterion("type <", value, "type");
            return this;
        }

        public Criteria andTypeLessThanOrEqualTo(Byte value) {
            addCriterion("type <=", value, "type");
            return this;
        }

        public Criteria andTypeIn(List values) {
            addCriterion("type in", values, "type");
            return this;
        }

        public Criteria andTypeNotIn(List values) {
            addCriterion("type not in", values, "type");
            return this;
        }

        public Criteria andTypeBetween(Byte value1, Byte value2) {
            addCriterion("type between", value1, value2, "type");
            return this;
        }

        public Criteria andTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("type not between", value1, value2, "type");
            return this;
        }

        public Criteria andIsAdminIsNull() {
            addCriterion("is_admin is null");
            return this;
        }

        public Criteria andIsAdminIsNotNull() {
            addCriterion("is_admin is not null");
            return this;
        }

        public Criteria andIsAdminEqualTo(Boolean value) {
            addCriterion("is_admin =", value, "isAdmin");
            return this;
        }

        public Criteria andIsAdminNotEqualTo(Boolean value) {
            addCriterion("is_admin <>", value, "isAdmin");
            return this;
        }

        public Criteria andIsAdminGreaterThan(Boolean value) {
            addCriterion("is_admin >", value, "isAdmin");
            return this;
        }

        public Criteria andIsAdminGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_admin >=", value, "isAdmin");
            return this;
        }

        public Criteria andIsAdminLessThan(Boolean value) {
            addCriterion("is_admin <", value, "isAdmin");
            return this;
        }

        public Criteria andIsAdminLessThanOrEqualTo(Boolean value) {
            addCriterion("is_admin <=", value, "isAdmin");
            return this;
        }

        public Criteria andIsAdminIn(List values) {
            addCriterion("is_admin in", values, "isAdmin");
            return this;
        }

        public Criteria andIsAdminNotIn(List values) {
            addCriterion("is_admin not in", values, "isAdmin");
            return this;
        }

        public Criteria andIsAdminBetween(Boolean value1, Boolean value2) {
            addCriterion("is_admin between", value1, value2, "isAdmin");
            return this;
        }

        public Criteria andIsAdminNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_admin not between", value1, value2, "isAdmin");
            return this;
        }

        public Criteria andRegisterTimeIsNull() {
            addCriterion("register_time is null");
            return this;
        }

        public Criteria andRegisterTimeIsNotNull() {
            addCriterion("register_time is not null");
            return this;
        }

        public Criteria andRegisterTimeEqualTo(Date value) {
            addCriterion("register_time =", value, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeNotEqualTo(Date value) {
            addCriterion("register_time <>", value, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeGreaterThan(Date value) {
            addCriterion("register_time >", value, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("register_time >=", value, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeLessThan(Date value) {
            addCriterion("register_time <", value, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeLessThanOrEqualTo(Date value) {
            addCriterion("register_time <=", value, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeIn(List values) {
            addCriterion("register_time in", values, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeNotIn(List values) {
            addCriterion("register_time not in", values, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeBetween(Date value1, Date value2) {
            addCriterion("register_time between", value1, value2, "registerTime");
            return this;
        }

        public Criteria andRegisterTimeNotBetween(Date value1, Date value2) {
            addCriterion("register_time not between", value1, value2, "registerTime");
            return this;
        }

        public Criteria andOuIdIsNull() {
            addCriterion("ou_id is null");
            return this;
        }

        public Criteria andOuIdIsNotNull() {
            addCriterion("ou_id is not null");
            return this;
        }

        public Criteria andOuIdEqualTo(Integer value) {
            addCriterion("ou_id =", value, "ouId");
            return this;
        }

        public Criteria andOuIdNotEqualTo(Integer value) {
            addCriterion("ou_id <>", value, "ouId");
            return this;
        }

        public Criteria andOuIdGreaterThan(Integer value) {
            addCriterion("ou_id >", value, "ouId");
            return this;
        }

        public Criteria andOuIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ou_id >=", value, "ouId");
            return this;
        }

        public Criteria andOuIdLessThan(Integer value) {
            addCriterion("ou_id <", value, "ouId");
            return this;
        }

        public Criteria andOuIdLessThanOrEqualTo(Integer value) {
            addCriterion("ou_id <=", value, "ouId");
            return this;
        }

        public Criteria andOuIdIn(List values) {
            addCriterion("ou_id in", values, "ouId");
            return this;
        }

        public Criteria andOuIdNotIn(List values) {
            addCriterion("ou_id not in", values, "ouId");
            return this;
        }

        public Criteria andOuIdBetween(Integer value1, Integer value2) {
            addCriterion("ou_id between", value1, value2, "ouId");
            return this;
        }

        public Criteria andOuIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ou_id not between", value1, value2, "ouId");
            return this;
        }

        public Criteria andPwdChangeRequiredIsNull() {
            addCriterion("pwd_change_required is null");
            return this;
        }

        public Criteria andPwdChangeRequiredIsNotNull() {
            addCriterion("pwd_change_required is not null");
            return this;
        }

        public Criteria andPwdChangeRequiredEqualTo(Boolean value) {
            addCriterion("pwd_change_required =", value, "pwdChangeRequired");
            return this;
        }

        public Criteria andPwdChangeRequiredNotEqualTo(Boolean value) {
            addCriterion("pwd_change_required <>", value, "pwdChangeRequired");
            return this;
        }

        public Criteria andPwdChangeRequiredGreaterThan(Boolean value) {
            addCriterion("pwd_change_required >", value, "pwdChangeRequired");
            return this;
        }

        public Criteria andPwdChangeRequiredGreaterThanOrEqualTo(Boolean value) {
            addCriterion("pwd_change_required >=", value, "pwdChangeRequired");
            return this;
        }

        public Criteria andPwdChangeRequiredLessThan(Boolean value) {
            addCriterion("pwd_change_required <", value, "pwdChangeRequired");
            return this;
        }

        public Criteria andPwdChangeRequiredLessThanOrEqualTo(Boolean value) {
            addCriterion("pwd_change_required <=", value, "pwdChangeRequired");
            return this;
        }

        public Criteria andPwdChangeRequiredIn(List values) {
            addCriterion("pwd_change_required in", values, "pwdChangeRequired");
            return this;
        }

        public Criteria andPwdChangeRequiredNotIn(List values) {
            addCriterion("pwd_change_required not in", values, "pwdChangeRequired");
            return this;
        }

        public Criteria andPwdChangeRequiredBetween(Boolean value1, Boolean value2) {
            addCriterion("pwd_change_required between", value1, value2, "pwdChangeRequired");
            return this;
        }

        public Criteria andPwdChangeRequiredNotBetween(Boolean value1, Boolean value2) {
            addCriterion("pwd_change_required not between", value1, value2, "pwdChangeRequired");
            return this;
        }

        public Criteria andStateIsNull() {
            addCriterion("state is null");
            return this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("state is not null");
            return this;
        }

        public Criteria andStateEqualTo(Integer value) {
            addCriterion("state =", value, "state");
            return this;
        }

        public Criteria andStateNotEqualTo(Integer value) {
            addCriterion("state <>", value, "state");
            return this;
        }

        public Criteria andStateGreaterThan(Integer value) {
            addCriterion("state >", value, "state");
            return this;
        }

        public Criteria andStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("state >=", value, "state");
            return this;
        }

        public Criteria andStateLessThan(Integer value) {
            addCriterion("state <", value, "state");
            return this;
        }

        public Criteria andStateLessThanOrEqualTo(Integer value) {
            addCriterion("state <=", value, "state");
            return this;
        }

        public Criteria andStateIn(List values) {
            addCriterion("state in", values, "state");
            return this;
        }

        public Criteria andStateNotIn(List values) {
            addCriterion("state not in", values, "state");
            return this;
        }

        public Criteria andStateBetween(Integer value1, Integer value2) {
            addCriterion("state between", value1, value2, "state");
            return this;
        }

        public Criteria andStateNotBetween(Integer value1, Integer value2) {
            addCriterion("state not between", value1, value2, "state");
            return this;
        }
    }
}